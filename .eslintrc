{
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "parser": "@typescript-eslint/parser",
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:react/recommended",
    "prettier",
    "plugin:prettier/recommended",
    "prettier/@typescript-eslint"
  ],
  "plugins": [
    "react",
    "@typescript-eslint",
    "prettier",
    "react-hooks",
    "promise",
    "import",
    "node",
    "simple-import-sort"
  ],
  "parserOptions": {
    "tsconfigRootDir": ".",
    "project": ["tsconfig.json"],
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "rules": {
    "max-len": [
      "error",
      {
        "code": 120,
        "ignoreRegExpLiterals": true
      }
    ],
    "react/no-unsafe": [2, {"checkAliases": true}],
    "react/no-deprecated": 2,
    "react/prop-types": 0,
    "promise/prefer-await-to-then": "error",
    "import/no-extraneous-dependencies": 0,
    "no-underscore-dangle": [
      "error",
      {
        "allow": [
          "_id",
          "__typename"
        ],
        "allowAfterThis": true
      }
    ],
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [
          ".js",
          ".ts",
          ".tsx"
        ]
      }
    ],
    "prettier/prettier": "error",
    "semi": [2, "never"],
    "comma-dangle": ["error", "only-multiline"],
    "curly": "error",
    "@typescript-eslint/interface-name-prefix": 0,
    "no-param-reassign": ["error", { "props": true }],
    "@typescript-eslint/require-await": 0,
    "@typescript-eslint/camelcase": 0,
    "@typescript-eslint/no-unsafe-call": 0,
    "@typescript-eslint/no-unsafe-member-access": 0,
    "@typescript-eslint/no-unsafe-assignment": 0,
    "@typescript-eslint/restrict-template-expressions": 0,
    "@typescript-eslint/no-unsafe-return": 0,
    "@typescript-eslint/unbound-method": 0,
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": "*",
        "next": ["return", "block", "block-like"]
      }
    ],
    "sort-imports": "off",
    "import/order": "off",
    "simple-import-sort/sort": [
      "error",
      {
        "groups": [
          // Node.js builtins. You could also generate this regex if you use a `.js` config.
          // For example: `^(${require("module").builtinModules.join("|")})(/|$)`
          [
            "^(assert|buffer|child_process|cluster|console|constants|crypto|dgram|dns|domain|events|fs|http|https|module|net|os|path|punycode|querystring|readline|repl|stream|string_decoder|sys|timers|tls|tty|url|util|vm|zlib|freelist|v8|process|async_hooks|http2|perf_hooks)(/.*|$)"
          ],
          // Packages. `react` related packages come first.
          ["^react", "^@?\\w"],
          // Types
          ["^.+?[Tt]ype.+?"],
          // Internal packages.
          ["^(@|@company|@ui|components|utils|config|vendored-lib)(/.*|$)"],
          // Hooks imports.
          ["^.*use[A-Z].*$"],
          // Side effect imports.
          ["^\\u0000"],
          // Parent imports. Put `..` last.
          ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
          // Other relative imports. Put same-folder imports and `.` last.
          ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
          // Style imports.
          ["^.*styled.index$"]
        ]
      }
    ]
  },
  "env": {
    "es6": true,
    "browser": true,
    "node": true,
    "jest": true
  }
}
